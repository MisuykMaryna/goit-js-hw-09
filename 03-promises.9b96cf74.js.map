{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAaA,IAAuBC,EAAUC,GAXpB,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,gB,IAImBP,EAeT,EAfmBC,EAehB,KAdC,IAAIO,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAET,E,MAAUC,IAEpBS,EAAO,C,SAAEV,E,MAAUC,GAAQ,GAE5BA,EAAM,IAOXc,QAAQC,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACxBgB,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAqBnB,QAAiBC,MAAU,IACvEmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MACpBgB,EAAAnB,GAASoB,OAAOC,QAAQ,sBAAoBnB,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n};\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\n\n\ncreatePromise(2, 1500)\n  promise.then(({ position, delay }) => {\n    Notiflix.Notify.failure(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  }).catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  })"],"names":["$7Y9D8","parcelRequire","position","delay","form","document","querySelector","addEventListener","e","preventDefault","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","promise","then","$parcel$interopDefault","Notify","failure","catch"],"version":3,"file":"03-promises.9b96cf74.js.map"}